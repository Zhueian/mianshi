1。kafka自消自产，做异步调用的替代
2。redis的内存和io和网络模型 ？
       a：说了tcp长链接
3。mysql怎么分页。能用limit关键字 但不建议，
    a：用主键 between（a,b）或者 in（a，b）；
4。kafka怎么ack的 ？
5。kafka怎么防止重复消费的 ？

20210421--电话面试小公司4个人
1。spring中的beanfactory factoryBean
    beanFactory是一个工厂接口，实现类如：WebXmlApplicationCOntext,实现类就是那个context上下文环境，
    factoryBean 是一个普通接口，实现类是就是生成bean的工具，spring叫factoryBean，
        apache叫beanUtils.create(xxx.Class)；beanUtil.copy(source,target)
        applicationContext是beanFactory的子接口，具体到项目每一个model
            继承关系体现在pom文件的<dependency>标签，如common不能访问web，每个model都能访问conmon
            其中的getBean()是递归调用来获取继承的多个上下文。
    ioc话术：
        beanFatory就是简单的map<XXX.Class,Object>;beanFactory
        applicationContext.refresh()，是大多数Java 程序员阅读spring源码的入口吧。

2。kafka的原理，用了什么协议
    kafka做日志归集，风控信息归集，同一应用自产自销做线程池削峰填谷。

3。redis事务，集群和哨兵区别
    redis扩容，缓存用hash一致性解决，持久化只能用自定义的再平衡系统只有集群模式可以。
    事务：支持一次性按顺序执行多个命令的能力，但是没有原子性，很简单redis事务虽然序列化，但是不能回滚。
    话术：单线程无法发挥多核CPU性能，不过可以通过在单机开多个Redis实例来解决
    redis哨兵是比之集群高自维护性，集群是高可用的，一组组的主从码就一个分布式一致性问题。

4。dobbo协议，话术：协议有很多，但是一个dubbo局域网内，协议有很多重叠功能，一般就用2，3个
    1。dubbo:单一长链接，nio，适于小数量并发量大、不适于大io流（音频视频文件）
    2.rmi：采用java.rmi.* 阻塞短链，jdk标准序列化，服务接口直接间接继承java.rmi.Remote
    3.hession：
        Hessian 底层采用 Http 通讯，采用 Servlet 暴露服务，Dubbo 缺省内嵌 Jetty 作为服务器实现。
        Hessian 是 Caucho 开源的一个 RPC 框架，其通讯效率高于 WebService 和 Java 自带的序列化
        适合：大io流
        实体类实现序列化接口
    4.webservice
        多链接，短链接，soap文本序列化，适于：跨语言系统集成
    5.thrift
    6.memcached
    7.http
    8.redis
    9.restfull

5.Spring多线程，单例bean话术：
    单例bean是现成不安全的。但是都是无状态bean（不储存数据），所以可以多现成共享；
    可以参口共享成员属性无状态，方法上不上锁也就没有意义了；
    而且singleton的bean线程非安全状态（储存一些线程中间值）用ThreadLocal（时间换空间）来解决，而不是锁。

20210423 阿里外包一面
1.b树和b+树
 话术，引用it老哥：二叉树 -> b树：单数据节点变成1、2个数据的节点，降低了高度（节点最多2个不是3，4个是2好做判断高低电平）
                b树 -> b+树 叶子节点有双向链表结构，解决二叉 和 b树的顺序范围查找回朔问题。
                b+树非叶子节点只存key 叶子节点存k（索引）-v（索引磁盘地址）

2。mysql索引失效的条件
    like 以%开头 、
    or语句前后没有同时使用索引 、
    数据类型出现隐式转化。如varchar不加单引号的话可能会自动转换为int型、
     IS NULL 或 IS NOT NULL操作、
     在索引字段上使用not，<>，!=、
     字段上使用函数、
  * 联合索引失效：引用it老哥理念：java实体类多字段排序，先排序a 再排序b 最后排序c，从左到右。

20210425 闵行全家面试（面前）
Java面试题
1. 算法
2. 性能
3. 数据结构
4. 红黑数
5. Spring security 授权执行流程
6. redis分布式锁
7. Linux命令怎么查找过滤想要的内容以及es底层原因
    es底层：倒排索引，为了高性能查操作，牺牲了写操作其实
8. cap
9. 授权中心表设计
    话术：说说最近的一个工作流流程审核相关的吧：
         1。角色表字典 eg：新增配置权限，安全一审，安全二审、管理员
         2。角色用户表 eg：13564081893
         3。任务字典表
            链接转译配置、域名过滤白名单
         4。任务实例表
         5。实例流水快照表
         6。记得说四要素字段
10. 多线程
11. 延迟消费
20210425 闵行全家面试（面后）
1。nio 话术：
2。kafka：